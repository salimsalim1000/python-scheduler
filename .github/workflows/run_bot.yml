jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Chrome
        run: |
          sudo apt update
          sudo apt install -y wget unzip jq
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb

      - name: Install matching ChromeDriver
        run: |
          sudo rm -f /usr/bin/chromedriver

          # Get the installed Chrome version (major.minor.build)
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -1)
          echo "Installed Chrome version: $CHROME_VERSION"

          # Fetch matching driver version for that Chrome version
          DRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json" \
            | jq -r --arg ver "$CHROME_VERSION" '.versions[] | select(.version == $ver) | .version')

          if [ -z "$DRIVER_VERSION" ]; then
            echo "❌ No matching ChromeDriver found for Chrome version $CHROME_VERSION"
            exit 1
          fi

          echo "✅ Found matching ChromeDriver version: $DRIVER_VERSION"

          # Download and install the matching ChromeDriver
          wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$DRIVER_VERSION/linux64/chromedriver-linux64.zip"
          unzip -q chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver

      - name: Verify installed versions (for debugging)
        run: |
          google-chrome --version
          chromedriver --version

      - name: Install Python dependencies
        run: pip install selenium

      - name: Run bot script
        env:
          TAGGED_EMAIL: ${{ secrets.TAGGED_EMAIL }}
          TAGGED_PASSWORD: ${{ secrets.TAGGED_PASSWORD }}
        run: python tagged_bot.py
